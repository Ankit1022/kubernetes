########
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simpledep
  namespace: learning
spec:
  selector:
    matchLabels:
      run: web-app   # k8s: ensure 2 pod of label run=web-app must always be there.
  replicas: 2
  template:
    metadata:
      labels:
        run: web-app   # label assign to pod 
    spec:
      containers:
      - name: webserver
        image: lovelearnlinux/webserver:v1
        ports:
        - containerPort: 80


# create namespace learning -
# kubectl create namespace learning
#
# initialize the deployment
# kubectl create -f deployment-webserver-with-service.yml
#
# check the deployment
# kubectl get deployment --namespace=learning
#
# get more details about the deployment
# kubectl describe deployments simpledep --namespace=learning
#
# get details about pods initialized by deployment
# kubectl get pods --namespace=learning
#
# get information about all pods created by deployment nn-web
# kubectl get pods -l run=web-app -o wide --namespace=learning
# 
# get the IP address of all pods initialized by deployment nn-web
# kubectl get pods -l run=web-app -o yaml --namespace=learning | grep podIP


# expose the deployment using service resource
# kubectl expose deployment simpledep --name simple-svc --namespace=learning
#
# get information about the service (note down the Cluster IP)
# kubectl get service simple-svc --namespace=learning
#
# get detailed information about service, where:
# Endpoints - are the pod's IP address 
# IP - is the service IP address, where we will hit (call it Cluster IP)
# kubectl describe service simple-svc --namespace=learning
#
# check endpoints (the pods which the service will hit) for the service
# kubectl get ep simple-svc --namespace=learning
#
# You can scale out pods on fly.
# kubectl scale deployment simpledep --replicas=5 --namespace=learning

# You can go to ANY node in the cluster and use 
# curl http://CLUSTER-IP
#
# --- You should be able to get the website contents ---
# delete the deployment
# kubectl delete deployment simpledep --namespace=learning
#
# delete the service
# kubectl delete service simple-svc --namespace=learning
#